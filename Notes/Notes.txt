AI FAKE NEWS DETECTOR

√âtape 1 : 
Langue : pn va commencer en Fran√ßais ensuite en anglais. Donc on va inclure les deux dans le final du projet 

Type de fake news cibl√©es : politique, sant√©, finance, ou g√©n√©ral ? Je veux que ce soit g√©n√©ral

Format d'entr√©e : texte brut ? URL d'article ? on peut faire les deux ou meme plus si c'est le cas


√âtape 2 : Choix des outils / technologies
Mod√®le IA : BERT ou RoBERTa fine-tun√© pour la classification binaire (r√©el vs fake).

Librairies : Transformers (Hugging Face), PyTorch ou TensorFlow, scikit-learn. 
On va utiliser Pytorch ou TensorFlow

Backend : FastAPI (rapide, moderne et Python natif).

Server : Node.js

Frontend : React.js (bonne UX, facile √† connecter via API).

Base de donn√©es : MongoDB ou PostgreSQL (pour stocker les pr√©dictions, historiques, feedbacks).

√âtape 3 : Dataset
Tu peux commencer avec :

LIAR Dataset (courtes phrases labellis√©es).

FakeNewsNet (plus long articles avec contexte social).

Kaggle Fake News Dataset.

√âtape 4 : Pipeline IA
Pr√©traitement du texte : nettoyage, tokenisation.

Fine-tuning d‚Äôun mod√®le pr√©-entra√Æn√© (BERT, DistilBERT‚Ä¶).

√âvaluation avec accuracy, F1-score, matrice de confusion.

Interpr√©tabilit√© : pourquoi l‚Äôarticle est consid√©r√© fake (via LIME ou SHAP).

√âtape 5 : D√©veloppement web
Cr√©ation de l‚ÄôAPI /analyze qui retourne un score de "fakeness".

Interface React avec un champ pour coller un article et voir le r√©sultat.

Affichage du score de pr√©diction + option de feedback utilisateur.

üí° Tu veux quoi maintenant ?
On peut :

Lancer ensemble le projet (je t‚Äôaide √† le structurer en fichiers).

Commencer par entra√Æner le mod√®le IA.

Travailler sur la partie frontend + backend.